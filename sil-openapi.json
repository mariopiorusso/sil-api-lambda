{
    "openapi": "3.0.1",
    "info": {
      "title": "SportsIslife - Sports Companion API",
      "version": "1.0.0"
    },
    "paths": {
      "/users": {
        "get": {
          "summary": "Get all users",
          "operationId": "getUsers",
          "responses": {
            "200": {
              "description": "A list of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "operationId": "createUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully"
            }
          }
        }
      },
      "/users/{userId}": {
        "get": {
          "summary": "Get a user by ID",
          "operationId": "getUserById",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a user by ID",
          "operationId": "updateUserById",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a user by ID",
          "operationId": "deleteUserById",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted successfully"
            }
          }
        }
      },
      "/events": {
        "get": {
          "summary": "Get all events",
          "operationId": "getEvents",
          "responses": {
            "200": {
              "description": "A list of events",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new event",
          "operationId": "createEvent",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Event created successfully"
            }
          }
        }
      },
      "/events/{eventId}": {
        "get": {
          "summary": "Get an event by ID",
          "operationId": "getEventById",
          "parameters": [
            {
              "name": "eventId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Event details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update an event by ID",
          "operationId": "updateEventById",
          "parameters": [
            {
              "name": "eventId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Event updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete an event by ID",
          "operationId": "deleteEventById",
          "parameters": [
            {
              "name": "eventId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Event deleted successfully"
            }
          }
        }
      },
      "/events/proximity": {
        "get": {
          "summary": "Get events by proximity",
          "operationId": "getEventsByProximity",
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "radius",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of events by proximity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams": {
        "get": {
          "summary": "Get all teams",
          "operationId": "getTeams",
          "responses": {
            "200": {
              "description": "A list of teams",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new team",
          "operationId": "createTeam",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Team created successfully"
            }
          }
        }
      },
      "/teams/{teamId}": {
        "get": {
          "summary": "Get a team by ID",
          "operationId": "getTeamById",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Team details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a team by ID",
          "operationId": "updateTeamById",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Team updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a team by ID",
          "operationId": "deleteTeamById",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Team deleted successfully"
            }
          }
        }
      },
      "/messages": {
        "get": {
          "summary": "Get all messages",
          "operationId": "getMessages",
          "responses": {
            "200": {
              "description": "A list of messages",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new message",
          "operationId": "createMessage",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Message created successfully"
            }
          }
        }
      },
      "/messages/{messageId}": {
        "get": {
          "summary": "Get a message by ID",
          "operationId": "getMessageById",
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Message details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a message by ID",
          "operationId": "updateMessageById",
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Message updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a message by ID",
          "operationId": "deleteMessageById",
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Message deleted successfully"
            }
          }
        }
      },
      "/buddies": {
        "get": {
          "summary": "Get all buddies",
          "operationId": "getBuddies",
          "responses": {
            "200": {
              "description": "A list of buddies",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Buddy"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new buddy",
          "operationId": "createBuddy",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Buddy"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Buddy created successfully"
            }
          }
        }
      },
      "/buddies/{buddyId}": {
        "get": {
          "summary": "Get a buddy by ID",
          "operationId": "getBuddyById",
          "parameters": [
            {
              "name": "buddyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Buddy details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Buddy"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a buddy by ID",
          "operationId": "updateBuddyById",
          "parameters": [
            {
              "name": "buddyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Buddy"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Buddy updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a buddy by ID",
          "operationId": "deleteBuddyById",
          "parameters": [
            {
              "name": "buddyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Buddy deleted successfully"
            }
          }
        }
      },
      "/buddies/{userId}/list": {
        "get": {
          "summary": "Get list of buddies for a user",
          "operationId": "getBuddiesForUser",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of buddies",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Buddy"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/buddyMessages": {
        "get": {
          "summary": "Get all buddy messages",
          "operationId": "getBuddyMessages",
          "responses": {
            "200": {
              "description": "A list of buddy messages",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BuddyMessage"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new buddy message",
          "operationId": "createBuddyMessage",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuddyMessage"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Buddy message created successfully"
            }
          }
        }
      },
      "/buddyMessages/{messageId}": {
        "get": {
          "summary": "Get a buddy message by ID",
          "operationId": "getBuddyMessageById",
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Buddy message details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BuddyMessage"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a buddy message by ID",
          "operationId": "updateBuddyMessageById",
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuddyMessage"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Buddy message updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a buddy message by ID",
          "operationId": "deleteBuddyMessageById",
          "parameters": [
            {
              "name": "messageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Buddy message deleted successfully"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
  
  
            "email": {
              "type": "string"
            },
            "sportsInterests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "location": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                }
              }
            },
            "skillLevel": {
              "type": "string"
            },
            "ratings": {
              "type": "number"
            }
          },
          "required": ["userId", "name", "email"]
        },
        "Event": {
          "type": "object",
          "properties": {
            "eventId": {
              "type": "string"
            },
            "entityType": {
              "type": "string"
            },
            "sportType": {
              "type": "string"
            },
            "location": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                }
              }
            },
            "title": {
              "type": "string"
            },
            "schedule": {
              "type": "string",
              "format": "date-time"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "joinedAt": {
              "type": "string",
              "format": "date-time"
            },
            "role": {
              "type": "string"
            }
          },
          "required": ["eventId", "entityType", "sportType", "location", "title", "schedule"]
        },
        "Team": {
          "type": "object",
          "properties": {
            "teamId": {
              "type": "string"
            },
            "entityType": {
              "type": "string"
            },
            "sportType": {
              "type": "string"
            },
            "teamName": {
              "type": "string"
            },
            "location": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                }
              }
            },
            "status": {
              "type": "string"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "joinedAt": {
              "type": "string",
              "format": "date-time"
            },
            "role": {
              "type": "string"
            }
          },
          "required": ["teamId", "entityType", "sportType", "teamName", "location"]
        },
        "Message": {
          "type": "object",
          "properties": {
            "eventId": {
              "type": "string"
            },
            "messageId": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "postedBy": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "imageS3Key": {
              "type": "string"
            }
          },
          "required": ["eventId", "messageId", "createdAt", "postedBy", "text"]
        },
        "Buddy": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "buddyId": {
              "type": "string"
            },
            "connectionDate": {
              "type": "string",
              "format": "date-time"
            },
            "status": {
              "type": "string"
            }
          },
          "required": ["userId", "buddyId", "connectionDate"]
        },
        "BuddyMessage": {
          "type": "object",
          "properties": {
            "messageId": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "senderId": {
              "type": "string"
            },
            "recipientId": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["messageId", "createdAt", "senderId", "recipientId", "text"]
        }
      }
    }
  }